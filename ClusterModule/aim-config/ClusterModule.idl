/**
 * IDL description of the ClusterModule
 *
 * This file is automatically parsed by the rurbuilder backends for the omniidl compiler. The names of the functions
 * will become port identifiers. The names of the function variables are not used. 
 *
 * The syntax of the IDL file also allows for "inout", but not all middlewares will accept this yet.
 */

#pragma author               Anne C. van Rossum
#pragma copyright            Distributed Organisms B.V.
#pragma date                 Nov 18, 2013
#pragma license              GNU General Lesser Public

// Recommended namespace "rur"
module rur {

// The command-line parameter (this struct is required)
struct Param {
  // multiple modules can be addressed in parallel, killed, etc. using "module_id"
  string module_id;
  // a certain parameter over the command-line (long becomes int) 
  long parameter;
};

// Typedef for array of integers
typedef sequence<long> long_seq;

// The public interface of ClusterModule
interface ClusterModule {

  // Training input
  void Train(in long_seq input);

  // Test input
  void Test(in long_seq input);

  // Class of last test 
  void Class(out long output);

  // Number of clusters can be set beforehand, e.g. in k-means
  void ClusterCount(in long k);

  // The method to be used:
  // 0: k-means clustering (default)
  // 1: Expectation-Maximization of a Gaussian Mixture Model
  void Method(in long method);

};

};
